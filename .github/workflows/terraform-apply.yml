name: Terraform Plan with Cost Estimation and Deployment

on:
  pull_request:
    branches:
      - infra_main
  push:
    branches:
      - infra_main
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pull-requests: write

jobs:
  plan-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform Init
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # PR-specific steps
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan --var-file=environments/dev.tfvars -lock=false

      - name: Convert Plan to JSON
        if: github.event_name == 'pull_request'
        working-directory: ./terraform
        run: terraform show -json tfplan > tfplan.json

      - name: Setup InfraCost
        if: github.event_name == 'pull_request'
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Cost Estimation
        if: github.event_name == 'pull_request'
        working-directory: ./terraform
        run: |
          infracost breakdown --path=tfplan.json --format=json --out-file=infracost.json --format=table
          cat infracost.json

      - name: Comment on PR with Cost Estimation
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./terraform/tfplan.json', 'utf8');
            const costOutput = fs.readFileSync('./terraform/infracost.json', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              ### Terraform Plan
              \`\`\`json
              ${planOutput}
              \`\`\`
              ### Cost Estimation
              \`\`\`json
              ${costOutput}
              \`\`\`
              `
            });

      # Post-merge steps (push event)
      - name: Terraform Apply
        if: github.event_name == 'push'
        working-directory: ./terraform
        run: terraform apply --var-file=environments/dev.tfvars -lock=false --auto-approve

      - name: Check Python
        run: python3 --version

      - name: Debug Inventory File
        run: cat ansible/inventory/ansible.ini  
      
      - name: Trigger Ansible Deployment
        if: github.event_name == 'push'
        run: |
          ansible-playbook -i ./ansible/inventory/ansible.ini ./ansible/site.yml
